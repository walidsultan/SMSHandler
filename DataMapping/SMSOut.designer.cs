#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SMSServer.DataMapping
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SMSCB")]
	public partial class SMSOutDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSMSIn(SMSIn instance);
    partial void UpdateSMSIn(SMSIn instance);
    partial void DeleteSMSIn(SMSIn instance);
    partial void InsertSMSOut(SMSOut instance);
    partial void UpdateSMSOut(SMSOut instance);
    partial void DeleteSMSOut(SMSOut instance);
    partial void InsertDestination(Destination instance);
    partial void UpdateDestination(Destination instance);
    partial void DeleteDestination(Destination instance);
    #endregion
		
		public SMSOutDataContext() : 
				base(global::SMSServer.DataMapping.Properties.Settings.Default.SMSCBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public SMSOutDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SMSOutDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SMSOutDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SMSOutDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SMSIn> SMSIns
		{
			get
			{
				return this.GetTable<SMSIn>();
			}
		}
		
		public System.Data.Linq.Table<SMSOut> SMSOuts
		{
			get
			{
				return this.GetTable<SMSOut>();
			}
		}
		
		public System.Data.Linq.Table<Destination> Destinations
		{
			get
			{
				return this.GetTable<Destination>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SMSIn")]
	public partial class SMSIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Phone;
		
		private string _MsgBody;
		
		private System.DateTime _RecTime;
		
		private int _Status;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _SmsOutId;
		
		private EntityRef<SMSOut> _SMSOut;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMsgBodyChanging(string value);
    partial void OnMsgBodyChanged();
    partial void OnRecTimeChanging(System.DateTime value);
    partial void OnRecTimeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnSmsOutIdChanging(System.Nullable<int> value);
    partial void OnSmsOutIdChanged();
    #endregion
		
		public SMSIn()
		{
			this._SMSOut = default(EntityRef<SMSOut>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgBody", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string MsgBody
		{
			get
			{
				return this._MsgBody;
			}
			set
			{
				if ((this._MsgBody != value))
				{
					this.OnMsgBodyChanging(value);
					this.SendPropertyChanging();
					this._MsgBody = value;
					this.SendPropertyChanged("MsgBody");
					this.OnMsgBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecTime
		{
			get
			{
				return this._RecTime;
			}
			set
			{
				if ((this._RecTime != value))
				{
					this.OnRecTimeChanging(value);
					this.SendPropertyChanging();
					this._RecTime = value;
					this.SendPropertyChanged("RecTime");
					this.OnRecTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsOutId", DbType="Int")]
		public System.Nullable<int> SmsOutId
		{
			get
			{
				return this._SmsOutId;
			}
			set
			{
				if ((this._SmsOutId != value))
				{
					if (this._SMSOut.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSmsOutIdChanging(value);
					this.SendPropertyChanging();
					this._SmsOutId = value;
					this.SendPropertyChanged("SmsOutId");
					this.OnSmsOutIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SMSOut_SMSIn", Storage="_SMSOut", ThisKey="SmsOutId", OtherKey="Id", IsForeignKey=true)]
		public SMSOut SMSOut
		{
			get
			{
				return this._SMSOut.Entity;
			}
			set
			{
				SMSOut previousValue = this._SMSOut.Entity;
				if (((previousValue != value) 
							|| (this._SMSOut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SMSOut.Entity = null;
						previousValue.SMSIns.Remove(this);
					}
					this._SMSOut.Entity = value;
					if ((value != null))
					{
						value.SMSIns.Add(this);
						this._SmsOutId = value.Id;
					}
					else
					{
						this._SmsOutId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SMSOut");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SMSOut")]
	public partial class SMSOut : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Phone;
		
		private string _MsgBody;
		
		private int _Status;
		
		private System.Nullable<int> _MR;
		
		private System.Nullable<System.DateTime> _Time;
		
		private System.Nullable<int> _TemplateId;
		
		private System.Nullable<int> _DestinationId;
		
		private EntitySet<SMSIn> _SMSIns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMsgBodyChanging(string value);
    partial void OnMsgBodyChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnMRChanging(System.Nullable<int> value);
    partial void OnMRChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnTemplateIdChanging(System.Nullable<int> value);
    partial void OnTemplateIdChanged();
    partial void OnDestinationIdChanging(System.Nullable<int> value);
    partial void OnDestinationIdChanged();
    #endregion
		
		public SMSOut()
		{
			this._SMSIns = new EntitySet<SMSIn>(new Action<SMSIn>(this.attach_SMSIns), new Action<SMSIn>(this.detach_SMSIns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgBody", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MsgBody
		{
			get
			{
				return this._MsgBody;
			}
			set
			{
				if ((this._MsgBody != value))
				{
					this.OnMsgBodyChanging(value);
					this.SendPropertyChanging();
					this._MsgBody = value;
					this.SendPropertyChanged("MsgBody");
					this.OnMsgBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MR", DbType="Int")]
		public System.Nullable<int> MR
		{
			get
			{
				return this._MR;
			}
			set
			{
				if ((this._MR != value))
				{
					this.OnMRChanging(value);
					this.SendPropertyChanging();
					this._MR = value;
					this.SendPropertyChanged("MR");
					this.OnMRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateId", DbType="Int")]
		public System.Nullable<int> TemplateId
		{
			get
			{
				return this._TemplateId;
			}
			set
			{
				if ((this._TemplateId != value))
				{
					this.OnTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateId = value;
					this.SendPropertyChanged("TemplateId");
					this.OnTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationId", DbType="Int")]
		public System.Nullable<int> DestinationId
		{
			get
			{
				return this._DestinationId;
			}
			set
			{
				if ((this._DestinationId != value))
				{
					this.OnDestinationIdChanging(value);
					this.SendPropertyChanging();
					this._DestinationId = value;
					this.SendPropertyChanged("DestinationId");
					this.OnDestinationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SMSOut_SMSIn", Storage="_SMSIns", ThisKey="Id", OtherKey="SmsOutId")]
		public EntitySet<SMSIn> SMSIns
		{
			get
			{
				return this._SMSIns;
			}
			set
			{
				this._SMSIns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SMSIns(SMSIn entity)
		{
			this.SendPropertyChanging();
			entity.SMSOut = this;
		}
		
		private void detach_SMSIns(SMSIn entity)
		{
			this.SendPropertyChanging();
			entity.SMSOut = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Destinations")]
	public partial class Destination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Destination()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
